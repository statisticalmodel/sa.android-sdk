create function isLarger(Number x, Number th) -> Number
  /* Return one when number `x` is larger than `th` */
  as case when x > th then 1
          else 0
      end;

create function accelerometer_data() -> Stream of Vector of Number
  /* Function that extracts a stream of data vectors from the accelerometer */
  as select stream of event[2]/* events have format [ts, data] */
       from Vector event
      where event in sensor(1);

create function absaccdata() -> Stream of Number
  /* Compute a stream of the sums of the absolute values of the
     accelerometer data vector */
  as sum(abs(accelerometer_data()));

create function absacc_stdev(Number window_size, Number window_stride) -> Stream of Number
  /* Compute the standard deviation over an absaccdata() window
     with size `window_size` and stride `window_stride` */
  as stdev(winagg(absAccData(), window_size, window_stride));

create function detectShake(Number th) -> stream of Vector
  /* Stream of shake status changes where the unit is considered shaking when the standard
     deviation the 50 latest absaccdata() readings is larger than `th` */
    as select stream of [rnow(), this_peerid(), value]
         from Number value
         where value in changed(isLarger(stdev(winagg(absAccData(), 50,5)), th));
